/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.com.fis.portal.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the NotificationEntry service. Represents a row in the &quot;TBL_NOTIFICATION&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link vn.com.fis.portal.model.impl.NotificationEntryModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link vn.com.fis.portal.model.impl.NotificationEntryImpl}.
 * </p>
 *
 * @author loind
 * @see NotificationEntry
 * @see vn.com.fis.portal.model.impl.NotificationEntryImpl
 * @see vn.com.fis.portal.model.impl.NotificationEntryModelImpl
 * @generated
 */
public interface NotificationEntryModel extends BaseModel<NotificationEntry> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a notification entry model instance should use the {@link NotificationEntry} interface instead.
	 */

	/**
	 * Returns the primary key of this notification entry.
	 *
	 * @return the primary key of this notification entry
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this notification entry.
	 *
	 * @param primaryKey the primary key of this notification entry
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the notification ID of this notification entry.
	 *
	 * @return the notification ID of this notification entry
	 */
	public long getNotificationId();

	/**
	 * Sets the notification ID of this notification entry.
	 *
	 * @param notificationId the notification ID of this notification entry
	 */
	public void setNotificationId(long notificationId);

	/**
	 * Returns the user ID from of this notification entry.
	 *
	 * @return the user ID from of this notification entry
	 */
	public long getUserIdFrom();

	/**
	 * Sets the user ID from of this notification entry.
	 *
	 * @param userIdFrom the user ID from of this notification entry
	 */
	public void setUserIdFrom(long userIdFrom);

	/**
	 * Returns the user ID to of this notification entry.
	 *
	 * @return the user ID to of this notification entry
	 */
	public long getUserIdTo();

	/**
	 * Sets the user ID to of this notification entry.
	 *
	 * @param userIdTo the user ID to of this notification entry
	 */
	public void setUserIdTo(long userIdTo);

	/**
	 * Returns the subject of this notification entry.
	 *
	 * @return the subject of this notification entry
	 */
	@AutoEscape
	public String getSubject();

	/**
	 * Sets the subject of this notification entry.
	 *
	 * @param subject the subject of this notification entry
	 */
	public void setSubject(String subject);

	/**
	 * Returns the message of this notification entry.
	 *
	 * @return the message of this notification entry
	 */
	@AutoEscape
	public String getMessage();

	/**
	 * Sets the message of this notification entry.
	 *
	 * @param message the message of this notification entry
	 */
	public void setMessage(String message);

	/**
	 * Returns the create date of this notification entry.
	 *
	 * @return the create date of this notification entry
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this notification entry.
	 *
	 * @param createDate the create date of this notification entry
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the status of this notification entry.
	 *
	 * @return the status of this notification entry
	 */
	public int getStatus();

	/**
	 * Sets the status of this notification entry.
	 *
	 * @param status the status of this notification entry
	 */
	public void setStatus(int status);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(NotificationEntry notificationEntry);

	public int hashCode();

	public CacheModel<NotificationEntry> toCacheModel();

	public NotificationEntry toEscapedModel();

	public String toString();

	public String toXmlString();
}